import { useGraphStore, useGraphEvent } from '@antv/xflow';
import { Drawer as AntdDrawer, Space, Button, Form, Input } from 'antd';
import { useState } from 'react';

const { TextArea } = Input;

// 类型断言
const Drawer = AntdDrawer as unknown as React.ComponentType<any>;

// interface NodeData {
//   id: string;
//   label?: string;
//   status?: 'default' | 'running' | 'success' | 'failed';
// }

import { ExecStepNodeType } from '../node';

const ConfigDrawer = () => {
  const [form] = Form.useForm();
  const updateNode = useGraphStore((state) => state.updateNode);
  const [open, setOpen] = useState(false);
  const [nodeData, setNodeData] = useState<ExecStepNodeType>();

  const onClose = () => {
    setOpen(false);
    form.resetFields();
  };

  const onSave = () => {
    form.validateFields().then(({ label }) => {
      updateNode(nodeData?.id as string, {
        data: {
          ...nodeData,
          label,
        },
      });
      onClose();
    });
  };

  useGraphEvent('node:click', ({ node }) => {
    const { data, id } = node;
    setOpen(true);
    setNodeData({ ...data, id });
    form.setFieldsValue(data);
  });

  useGraphEvent('blank:click', () => {
    onClose();
  });

  return (
    <>
      <Drawer
        width={300}
        open={open}
        title="节点信息"
        destroyOnClose
        mask={false}
        onClose={onClose}
        footer={
          <Space>
            <Button onClick={onClose}>取消</Button>
            <Button onClick={onSave} type="primary">
              保存
            </Button>
          </Space>
        }
      >
        <Form form={form} layout="vertical" requiredMark={false} autoComplete="off">
          <Form.Item
            name="label"
            label="节点名"
            rules={[{ required: true, message: '请填写节点名称' }]}
          >
            <Input placeholder="请填写节点名称" />
          </Form.Item>
          <Form.Item
            name="desc"
            label="节点描述"
            rules={[{ required: false, message: '请填写节点描述' }]}
          >
            <TextArea placeholder="请填写节点描述" />
          </Form.Item>
          <Form.Item
            name="output"
            label="输出"
            rules={[{ required: false, message: '请填写节点输出' }]}
          >
            <TextArea placeholder="请填写节点输出描述" />
          </Form.Item>
        </Form>
      </Drawer>
    </>
  );
};

export { ConfigDrawer };
